软件的开发过程

1 明确业务需求
  用自然语言，将业务功能描述清楚

俄罗斯方块的基本规则：
1、一个用于摆放小型正方形的平面虚拟场地，其标准大小：行宽为10，列高为20，以每个小正方形为单位。 
2、一组由4个小型正方形组成的规则图形，英文称为Tetromino，中文通称为方块共有7种，
分别以S、Z、L、J、I、O、T这7个字母的形状来命名。
I：一次最多消除四层
J（左右）：最多消除三层，或消除二层
L：最多消除三层，或消除二层
O：消除一至二层
S（左右）：最多二层，容易造成孔洞
Z （左右）：最多二层，容易造成孔洞
T：最多二层

（1）玩家操作有：旋转方块，以格子为单位左右移动方块，让方块加速落下。
（2）方块移到区域最下方或是着地到其他方块上无法移动时，就会固定在该处，而新的方块出现在区域上方开始落下。
（3）当区域中某一列横向格子全部由方块填满，则该列会消失并成为玩家的得分。同时删除的列数越多，得分指数上升。
（4）当固定的方块堆到区域最上方而无法消除层数时，则游戏结束。
（6）一般来说，游戏还会提示下一个要落下的方块，熟练的玩家会计算到下一个方块，评估要如何进行
。由于游戏能不断进行下去对商业用游戏不太理想，所以一般还会随着游戏的进行而加速提高难度。
（7）预先设置的随机发生器不断地输出单个方块到场地顶部


2 业务分析
  找到有哪些业务对象根据图片的分析
  
  tetris(俄罗斯方块)
    |-- score 累计分数
    |-- lines 销毁的行数
    |-- wall(墙 20行X10列)
    |    |-- 20row（行）
    |         |-- 10 col cell（列）
    |-- tetromino 正在下落的（4格方块，有7种形态）
    |      |-- 4 cell
    |-- nextOne 下一个准备下落的方块 
           |-- 4 cell

3 数据模型, 一切业务对象转换为数字表示  
  场地按照行列划分为 20×10格子
   格子有属性row, col, color
   
4 类 设计
  Tetris
    |-- int score
    |-- int lines
    |-- Cell[20][10] wall
    |-- Tetromino tetromino
    |      |-- Cell[4] cells
                 |-- row
                 |-- col
                 |-- color

5 算法设计，就是如何利用数据的计算实现软件的功能
 
 4格方块的初始形态：I S Z J L T O 
  就在初始数据的数值状态设计
  
  四格方块的下落计算： 就是将每个格子的row+1
  就是将下落业务功能，转换为数字计算实现
  
 左右移动
 
 下落流程控制：控制方块下落与墙之间的控制关系
   1 合理的文字流程描述 
   2 分析文字描述中的功能（动作）为方法
   3 用流程控制语句连接方法实现功能！
   4 严格测试结果！ TestCase 
 
 左右移动流程控制

 分数计算

 界面的绘制
 
 键盘事件控制
  
 
 旋转流程控制
 
 加速下降流程控制
 
 开始流程控制（Timer）
 
 暂停流程控制
 
 继续流程控制
 
 结束流程控制
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
   
   
   
   
   
   
   
   
   
   
   
  
  
  
  
  






